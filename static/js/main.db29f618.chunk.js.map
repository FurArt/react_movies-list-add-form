{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/TextField/TextField.tsx","services/validUrl.ts","services/validtext.ts","services/objValuesAudit.ts","components/NewMovie/NewMovie.tsx","services/validateField.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","TextField","name","value","label","placeholder","required","onChange","onBlur","touched","valid","useState","Math","random","toFixed","slice","id","hasError","htmlFor","type","classNames","event","target","validateUrl","input","test","validateInput","data","trim","objValuesAudit","obj","key","Object","keys","reduce","acc","curr","objectToched","NewMovie","onAdd","count","formData","setFormData","fieldNames","initialAudit","request","forEach","defaultTouched","defaultValid","setTouched","fieldValid","setFieldValid","handleTextFieldChange","handleBlur","length","fieldName","fieldValue","setfunction","prevSaveObject","validateField","isButtonDisabled","onClick","disabled","App","moviesFromServer","moviesFromServerWithNew","setMoviesFromServerWithNew","newMovie","prevMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.db29f618.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useState, ChangeEvent } from 'react';\n\n// import { validateField } from '../../services/validateField';\n\n// type ValidError = {\n//   [key: string]: boolean;\n//   title: boolean;\n//   imgUrl: boolean;\n//   imdbUrl: boolean;\n//   imdbId: boolean;\n// };\n\ntype Props = {\n  name: string;\n  value: string;\n  label?: string;\n  placeholder?: string;\n  required?: boolean;\n  onChange?: (newValue: string, name: string) => void;\n  onBlur?: (newValue: string, name: string) => void;\n  touched?: boolean;\n  valid?: boolean;\n};\n\nfunction getRandomDigits() {\n  return Math.random()\n    .toFixed(16)\n    .slice(2);\n}\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  label = name,\n  placeholder = `Enter ${label}`,\n  required = false,\n  onChange = () => {},\n  onBlur = () => {},\n  touched,\n  valid,\n}) => {\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n\n  const hasError = touched && required && !value;\n  const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n    onChange(event.target.value, name);\n  };\n\n  const handleBlur = () => {\n    onBlur(value, name);\n  };\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          type=\"text\"\n          id={id}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasError,\n          })}\n          placeholder={placeholder}\n          value={value}\n          onChange={handleChange}\n          onBlur={handleBlur}\n        />\n      </div>\n\n      {hasError && (\n        <p className=\"help is-danger\">{`${label} is required`}</p>\n      )}\n\n      { !hasError && valid && (\n        <p className=\"help is-danger\">{`The ${label} is incorrect`}</p>\n      )}\n    </div>\n  );\n};\n","export function validateUrl(input:string): string | boolean {\n  /* eslint-disable-next-line */\n  const pattern = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@,.\\w_]*)#?(?:[,.!/\\\\\\w]*))?)$/;\n\n  return pattern.test(input) ? input : false;\n}\n","export function validateInput(data: string) {\n  if (typeof data === 'string' && data.trim() !== '') {\n    return true;\n  }\n\n  return false;\n}\n","export function objValuesAudit(obj: Record<string, any>, key: string) {\n  return Object.keys(obj).reduce((acc: Record<string, any>, curr: string) => {\n    const objectToched = acc;\n\n    objectToched[curr] = obj[curr][key] as any;\n\n    return objectToched;\n  }, {});\n}\n","import { useState } from 'react';\nimport { TextField } from '../TextField';\nimport { Movie } from '../../types/Movie';\nimport { validateField } from '../../services/validateField';\nimport { objValuesAudit } from '../../services/objValuesAudit';\n\ntype Props = {\n  onAdd: (movie: Movie) => void;\n};\n\nexport const NewMovie: React.FC<Props> = ({ onAdd }) => {\n  const [count] = useState(0);\n  const [formData, setFormData] = useState({\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  });\n  const fieldNames = Object.keys(formData);\n\n  const initialAudit: Record<string, {\n    request: boolean;\n    valid: boolean;\n  }> = {\n    title: {\n      request: false,\n      valid: false,\n    },\n  };\n\n  fieldNames.forEach((key) => {\n    initialAudit[key] = {\n      request: false,\n      valid: false,\n    };\n  });\n\n  const defaultTouched = objValuesAudit(initialAudit, 'request');\n  const defaultValid = objValuesAudit(initialAudit, 'valid');\n\n  const [touched, setTouched] = useState(defaultTouched);\n\n  const [fieldValid, setFieldValid] = useState(defaultValid);\n\n  const handleTextFieldChange = (name: string, value: string) => {\n    setFormData({ ...formData, [name]: value });\n  };\n\n  const handleBlur = (value: string, name: string) => {\n    if (!value.length) {\n      setTouched({ ...touched, [name]: true });\n    } else if (name !== 'description') {\n      validateField(\n        name,\n        value,\n        setFieldValid,\n      );\n    }\n  };\n\n  const reset = () => {\n    setFormData({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    });\n\n    setTouched(defaultTouched);\n    setFieldValid(defaultValid);\n  };\n\n  const handleAddClick = () => {\n    const {\n      title,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    } = formData;\n\n    if (title && imgUrl && imdbUrl && imdbId) {\n      onAdd(formData);\n      reset();\n    }\n  };\n\n  const isButtonDisabled = !formData.title\n  || !formData.imgUrl\n    || !formData.imdbUrl\n    || !formData.imdbId\n    || fieldValid.title\n    || fieldValid.imgUrl\n    || fieldValid.imdbUrl\n    || fieldValid.imdbId;\n\n  return (\n    <form className=\"NewMovie\" key={count}>\n      <h2 className=\"title\">Add a movie</h2>\n\n      <TextField\n        name=\"title\"\n        label=\"Title\"\n        value={formData.title}\n        touched={touched.title}\n        valid={fieldValid.title}\n        onChange={(value, name) => {\n          handleTextFieldChange(name, value);\n        }}\n        onBlur={(value) => handleBlur(value, 'title')}\n        required\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        value={formData.description}\n        touched={touched.description}\n        valid={fieldValid.description}\n        onChange={(value, name) => {\n          handleTextFieldChange(name, value);\n        }}\n        onBlur={(value) => handleBlur(value, 'description')}\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        value={formData.imgUrl}\n        touched={touched.imgUrl}\n        valid={fieldValid.imgUrl}\n        onChange={(value, name) => {\n          handleTextFieldChange(name, value);\n        }}\n        onBlur={(value) => handleBlur(value, 'imgUrl')}\n        required\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        value={formData.imdbUrl}\n        touched={touched.imdbUrl}\n        valid={fieldValid.imdbUrl}\n        onChange={(value, name) => {\n          handleTextFieldChange(name, value);\n        }}\n        onBlur={(value) => handleBlur(value, 'imdbUrl')}\n        required\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={formData.imdbId}\n        touched={touched.imdbId}\n        valid={fieldValid.imdbId}\n        onChange={(value, name) => {\n          handleTextFieldChange(name, value);\n        }}\n        onBlur={(value) => handleBlur(value, 'imdbId')}\n        required\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"button\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            onClick={handleAddClick}\n            disabled={isButtonDisabled}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import { validateUrl } from './validUrl';\nimport { validateInput } from './validtext';\n\ntype SaveObject = {\n  title: boolean;\n  imgUrl: boolean;\n  imdbUrl: boolean;\n  imdbId: boolean;\n};\n\nexport const validateField = (\n  fieldName: string,\n  fieldValue: string,\n  // saveObject: SaveObject,\n  setfunction: React.Dispatch<React.SetStateAction<SaveObject>>,\n) => {\n  switch (fieldName) {\n    case 'title':\n      setfunction((prevSaveObject) => ({\n        ...prevSaveObject,\n        [fieldName]: !validateInput(fieldValue),\n      }));\n      break;\n    case 'imgUrl':\n      setfunction((prevSaveObject) => ({\n        ...prevSaveObject,\n        [fieldName]: !validateUrl(fieldValue),\n      }));\n      break;\n    case 'imdbUrl':\n      setfunction((prevSaveObject) => ({\n        ...prevSaveObject,\n        [fieldName]: !validateUrl(fieldValue),\n      }));\n      break;\n    case 'imdbId':\n      setfunction((prevSaveObject) => ({\n        ...prevSaveObject,\n        [fieldName]: !validateInput(fieldValue),\n      }));\n      break;\n    default:\n      setfunction((prevSaveObject) => ({\n        ...prevSaveObject,\n        [fieldName]: false,\n      }));\n  }\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [\n    moviesFromServerWithNew,\n    setMoviesFromServerWithNew,\n  ] = useState(moviesFromServer);\n\n  const handleAddMovie = (newMovie: Movie) => {\n    setMoviesFromServerWithNew((prevMovies) => {\n      return [...prevMovies, newMovie];\n    });\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={moviesFromServerWithNew} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie onAdd={handleAddMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}