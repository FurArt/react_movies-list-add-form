{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","services/validtext.ts","services/validUrl.ts","components/TextField/TextField.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","validateInput","data","trim","validateUrl","input","test","TextField","name","value","label","placeholder","required","onChange","onBlur","touched","useState","Math","random","toFixed","slice","id","hasError","validError","setValidError","htmlFor","type","classNames","event","target","fieldName","fieldValue","validateField","NewMovie","onAdd","count","formData","setFormData","setTouched","handleTextFieldChange","onClick","disabled","App","moviesFromServer","moviesFromServerWithNew","setMoviesFromServerWithNew","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.31c7f792.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","export function validateInput(data: string) {\n  if (typeof data === 'string' && data.trim() !== '') {\n    return true;\n  }\n\n  return false;\n}\n","export function validateUrl(input:string): string | boolean {\n  /* eslint-disable-next-line */\n  const pattern = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@,.\\w_]*)#?(?:[,.!/\\\\\\w]*))?)$/;\n\n  return pattern.test(input) ? input : false;\n}\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\nimport { validateInput } from '../../services/validtext';\nimport { validateUrl } from '../../services/validUrl';\n\ntype Props = {\n  name: string;\n  value: string;\n  label?: string;\n  placeholder?: string;\n  required?: boolean;\n  onChange?: (newValue: string) => void;\n  onBlur?: () => void;\n  touched?: boolean;\n};\n\nfunction getRandomDigits() {\n  return Math.random()\n    .toFixed(16)\n    .slice(2);\n}\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  label = name,\n  placeholder = `Enter ${label}`,\n  required = false,\n  onChange = () => {},\n  onBlur = () => {},\n  touched,\n}) => {\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n\n  const hasError = touched && required && !value;\n  const [validError, setValidError] = useState(false);\n\n  const validateField = (fieldName: string, fieldValue: string) => {\n    switch (fieldName) {\n      case 'title':\n        setValidError(!validateInput(fieldValue));\n        break;\n      case 'imgUrl':\n        setValidError(!validateUrl(fieldValue));\n        break;\n      case 'imdbUrl':\n        setValidError(!validateUrl(fieldValue));\n        break;\n      case 'imdbId':\n        setValidError(!validateInput(fieldValue));\n        break;\n      default:\n        setValidError(false);\n    }\n  };\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          type=\"text\"\n          id={id}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasError,\n          })}\n          placeholder={placeholder}\n          value={value}\n          onChange={event => {\n            onChange(event.target.value);\n          }}\n          onBlur={() => {\n            onBlur();\n            validateField(name, value);\n          }}\n        />\n      </div>\n\n      {hasError && (\n        <p className=\"help is-danger\">{`${label} is required`}</p>\n      )}\n\n      {validError && (\n        <p className=\"help is-danger\">{`The ${label} is incorrect`}</p>\n      )}\n    </div>\n  );\n};\n","import { useState } from 'react';\nimport { TextField } from '../TextField';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  onAdd: (movie: Movie) => void;\n};\n\nexport const NewMovie: React.FC<Props> = ({ onAdd }) => {\n  const [count] = useState(0);\n  const [formData, setFormData] = useState({\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  });\n\n  const [touched, setTouched] = useState({\n    title: false,\n    description: false,\n    imgUrl: false,\n    imdbUrl: false,\n    imdbId: false,\n  });\n\n  const handleTextFieldChange = (name: string, value: string) => {\n    setFormData({ ...formData, [name]: value });\n  };\n\n  const reset = () => {\n    setFormData({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    });\n\n    setTouched({\n      title: false,\n      description: false,\n      imgUrl: false,\n      imdbUrl: false,\n      imdbId: false,\n    });\n  };\n\n  const handleAddClick = () => {\n    const {\n      title,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    } = formData;\n\n    if (title && imgUrl && imdbUrl && imdbId) {\n      onAdd(formData);\n      reset();\n    }\n  };\n\n  return (\n    <form className=\"NewMovie\" key={count}>\n      <h2 className=\"title\">Add a movie</h2>\n\n      <TextField\n        name=\"title\"\n        label=\"Title\"\n        value={formData.title}\n        touched={touched.title}\n        onChange={(value) => handleTextFieldChange('title', value)}\n        onBlur={() => setTouched({ ...touched, title: true })}\n        required\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        value={formData.description}\n        touched={touched.description}\n        onChange={\n          (value) => handleTextFieldChange('description', value)\n        }\n        onBlur={() => setTouched({ ...touched, description: true })}\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        value={formData.imgUrl}\n        touched={touched.imgUrl}\n        onChange={\n          (value) => handleTextFieldChange('imgUrl', value)\n        }\n        onBlur={() => setTouched({ ...touched, imgUrl: true })}\n        required\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        value={formData.imdbUrl}\n        touched={touched.imdbUrl}\n        onChange={\n          (value) => handleTextFieldChange('imdbUrl', value)\n        }\n        onBlur={() => setTouched({ ...touched, imdbUrl: true })}\n        required\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={formData.imdbId}\n        touched={touched.imdbId}\n        onChange={\n          (value) => handleTextFieldChange('imdbId', value)\n        }\n        onBlur={() => setTouched({ ...touched, imdbId: true })}\n        required\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"button\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            onClick={handleAddClick}\n            disabled={\n              !formData.title\n              || !formData.imgUrl\n              || !formData.imdbUrl\n              || !formData.imdbId\n            }\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport const App = () => {\n  const [\n    moviesFromServerWithNew,\n    setMoviesFromServerWithNew,\n  ] = useState(moviesFromServer);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={moviesFromServerWithNew} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie onAdd={(movie) => {\n          setMoviesFromServerWithNew([\n            ...moviesFromServerWithNew,\n            movie]);\n        }}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}